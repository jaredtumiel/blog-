{
  
    
        "post0": {
            "title": "Spinning Up in Active Inference and the Free Energy Principle",
            "content": "A few months back I posted the first part of an introduction to the Free Energy Principle. I did this because it’s fascinating and important, and yet sometimes comically difficult to learn about. A big part of the problem is probably Research Debt - a dearth of digestible translations of cutting-edge research into something accessible to non-specialists. My FEP Explained posts are aimed at this problem, but this post is aimed at another: not knowing where to start or where to go! . Alice Lost In The Forest . There is no well-defined syllabus of material that you could aim to complete such that, at the end, you have the necessary theoretical background to grok the theory in its full glory, and can feel confident that you have a reasonably complete map of the territory. A syllabus should gradually shorten the inferential distance, taking you from a complete beginner, and gradually increasing the detail and technicality. . This syllabus includes short descriptions of each entry, so that it also functions as a high-level overview of how the various parts of the theory fit together. The syllabus ends with a list of the biggest unsolved challenges and open problems in the FEP/Active Inference scene. If you have suggestions, let me know on Twitter! . How to use this syllabus . Generally, you should Dive In. Don’t wait to finish all the prerequisites before you try getting your head around the theory. Jeremy Howard from Fast.ai has this great line about playing around with a system before you fully understand it, and once you have a feel for it, only then do you go learn the technical details. So even though this list starts with “prerequisites”, treat that as a placeholder, go until you get stuck, and then come back and see if you can find the answer to the stuck-feeling in one of the prerequisites. . I’ve also tried to have a hierarchy of materials within each category, starting with short, intuitive primers and ending with longer, more difficult technical material that only becomes relevant as your interests deepen. There isn’t a strict order to the materials, which is why it’s probably better to go iteratively deeper across categories as needed. . Prerequisites . Neuroscience . The FEP came out of Karl Friston’s neuroimaging work, so it shouldn’t be surprising that neuroscience is a key competency. . Predictive Coding/Predictive Processing . Predictive coding is a theory of how the brain works that inverts the traditional “bottom-up” feature detection view and replaces it with the brain generating top-down predictions instead. When a prediction does not match with what is actually observed, an error signal is passed up through the brain and changes take place to minimise the prediction error in the future. . Predictive processing is closely associated with the FEP, and naturally “emerges” from the equations governing the FEP. In this sense, understanding PP is helpful to have an intuitive view of what the FEP achieves in the brain. . It’s Bayes All The Way Up by Scott Alexander [blog] Scott has a great series of posts on Bayesian brain hypotheses. A nice way to get some intuitions! | . | Bit of a Tangent [podcast] This is cheating, but we did a series of three podcasts on PP, so check those out if you prefer audio | . | Surfing Uncertainty by Andy Clark [book] This technical book gives a deep introduction to much of the theory behind PP, but still manages to be accessible to non-neuroscientists (I’m not one). It’s really good for getting an overview of the PP literature and the flavour of this view of the brain! | Scott Alexander also has a great review of the book here | . | . Computational Neuro and modelling techniques . Part of the appeal of the FEP is that it might lead to improved models of the brain and biological intelligence. Learning to set up experiments, design simulations, and implement models of neural systems in code is a big part of turning the theoretical results of the FEP into a powerful set of new tools and applications! . Neuromatch Academy [summer school/course][virtual] This is a fully-online Summer School with all the materials freely available. It includes all of the content you need to get started in computational neuroscience and includes deep learning and reinforcement learning content too! The content has been created and curated by a great team of researchers and their explicit goal is to train people from diverse backgrounds in computational neuroscience! | . | The Imbizo [summer school/course][in-person] If/when international travel ever becomes possble again, I cannot more strongly recommend attending the annual Computational Neuroscience ‘Imbizo’ in Muizenburg, South Africa. It’s basically a three week crash course in computational neuroscience with a bunch of awesome speakers and students. It’s easily the most fun I had in 2020, and I learnt a tonne! | . | Computational Psychiatry course [course] One of the promises of the FEP is a new understanding of the computational basis of psychiatric disorders such as depression, schizophrenia, ADHD, bipolar-mood disorder and others. This course is an introduction to understanding these conditions computationally and mathematically. The course materials are all online, and Karl Friston himself has given some of the lectures in previous years! | . | . Physics . The Free Energy Principle wants to explain how we, as biological organisms obeying the laws of physics, can self-organise into complicated creatures that maintain our complexity despite (or because of) dissipative forces. The FEP rests solidly on the ideas of modern physics, so the more you know here the better! . Statistical Mechanics . Entropy, Free Energy, non-equilibrium steady states - these ideas are front and centre in the FEP literature and all come from stat-mech. If you were going to spend your time learning about only one area of physics to really have a good basis in the FEP, this is probably the one you’d pick. . Statistical Mechanics in The Theoretical Minimum by Leonard Susskind [lecture course] Leonard Susskind is a hero to me. I’ve heard more than one person say that they did multiple stat-mech courses and the derivation of the partition function was never as magically clear as Susskind’s. If you’ve never done any stat-mech, this is a good place to start! | . | Statistical Mechanics: A Set of Lectures by Richard Feynman [textbook] The Feynman Lectures on Physics are rightly famous for their explanatory clarity, but less well-known are his lectures on statistical mechanics! Worth reading just because it’s Feynman! | . | . Non-equilibrium Statistical Mechanics . Of course, the FEP deals with living systems, and living means being far from thermodynamic equilibrium, so we’ll want to understand how to describe these systems mathematically. The big ideas that come up often are non-equilibrium steady states, as well as the Langevin and Fokker-Planck equations. . Non-equilibrium Statistical Mechanics by the Indian Institute of Technology Madras [lecture videos] Professor Balakrishnan is legendary on YouTube for the clarity of his explanations. The course is genuinely great and includes lots of detailed explanations of the Langevin and Fokker-Planck perspectives on dynamical systems! | . | A Worked Example of Fokker-Planck based Active Inference by Magnus Koudahl &amp; Bert De Vries [video] This is a great direct introduction to using the Fokker-Planck equation in the FEP! It’s especially useful if you’ve read a few papers and can’t make sense of the notation - this is the clearest description I’ve found! | . | Nonequilibrium Statistical Physics: A Modern Perspective by Livi &amp; Politi [textbook] Both this book and the one below contain detailed derivations of the techniques used for non-equilibrium stat mech. They’re both similar, but Attard’s book has more focus on entropy and the second law of thermodynamics, whereas Livi spends more time on critical phenomena. | . | Non-equilibrium Thermodynamics and Statistical Mechanics: Foundations and Applications by Attard [textbook] | . Classical Mechanics, Hamiltonian Mechanics, and the Principle of Least Action . Friston sometimes frames the FEP in terms of a principle of least action, where action is an integral over a nice object called a Lagrangian. Lagrangians and Least Action principles give us a really powerful way to describe the equations of motion, symmetries, and conservation laws of our system, so knowing about this approach is really worthwhile. That being said, this approach doesn’t feature prominently in the basic formulation of the FEP, so don’t get stuck here! . Classical Mechanics by Leonard Susskind Like his Stat-Mech course, Susskind does a good job of getting the main ideas across with just enough maths to allow you to understand more formal treatments later. | . | . Gauge theory . Gauge theory is a way of describing how certain symmetries in our system can lead to new properties/forces. It’s not a big part of the core theory, but I include it here because it’s a personal favourite, and Friston and collaborators have dabbled in applying some gauge-theoretic ideas to the FEP. . Gauge Theory - The Biggest Ideas in The Universe by Sean Carroll | Physics From Finance: A Gentle Introduction to Gauge Theories by Jakob Schwichtenberg [textbook] This is about as an intuitive introduction to the idea as you could ever get. Schwichtenberg actually starts off with an easy financial model and then uses that analogy to build up to the use of gauge theories in particle physics. | . | . Maths . I kind of want to say that I’m taking it for granted that you know at least a bit of multivariable calculus, some linear algebra, and some probability theory (the FEP people definitely assume this, and more), but also I didn’t know any of those things when I started (not so long ago!) and felt really helpless when they were just assumed, so the above links go to the MIT OpenCourseware courses I used to get going! . Bayesian inference . The FEP fundamentally deals with agents trying to infer the state of their environment, given their current sensory data. Whenever you have a sentence like that, Bayes’ Theorem can’t be far behind! Understanding, on a gut level, the mechanics of how Bayes works, and being able to fluidly work with the different forms of the formula (knowing some basic identities in terms of joint distributions and marginal distributions) generally makes a lot of things in the FEP clearer! . An Intuitive Explanation of Bayes’ Theorem by Eliezer Yudkowsky [blog] I link to this article all over the place because it’s just so good. It won’t teach you to use Bayesian techniques in your machine learning model, but it will teach you why you’d want to! | . | Probability Theory: The Logic of Science by E.T. Jaynes [textbook] Rederiving probabilitiy theory from scratch might be overkill, but this book sort of reads like the Feynman Lectures, but for probability theory. Be sure to grab the unofficial errata | . | Machine Learning: A Probabilistic Perspective by Kevin Murphy [textbook] This is pretty lengthy but for the first 3 chapters (reintroducing key ideas in machine learning, probability theory, and generative models) are a quick way to get up to speed with a lot of the jargon, if you’ve already done a bit of probability theory beforehand! Chapter 5 on Bayesian statistics and chapter 21 on variational inference (see below) are especially relevant to the FEP! | . | . Information theory . Entropy, confusingly, moonlights as a term in information theory. Not only that, but since much of the FEP is about a system inferring the state of a hidden (latent) variable through its noisy sensory signals, the techniques of information theory (invented by Claude Shannon for almost exactly that kind of problem) are key. Information theory also teaches us about the Kullback-Liebler divergence, which is worth knowing just on its own! . Shannon Entropy and Information Gain by Louis Serrano [video] This is a good intro video covering a lot of what you need to know when you’re just getting started | . | A Short Introduction to Entropy, Cross-Entropy, and KL-Divergence by Aurélien Géron [video] I’ve watched this video at least 5 times. It’s a brilliant introduction to some genuinely challenging concepts in a way that leaves you feeling like everything finally makes sense! | . | Information Theory, Inference, and Learning Algorithms by David MacKay [textbook] This freely available textbook contains a lot more detail than the two intro videos. It’s a good place to look if you have nitty-gritty information theory questions. | . | . Information geometry . Depending on your feelings about math, information geometry is either a sort of sublime union of differential geometry and statistics, or a Frankenstein’s Monster of two other monsters. Information geometry lets us do statistics on manifolds, which seems arbitrary (especially if you don’t know what a manifold is), but might be useful, and is at least very cool to say to your friends. Friston occasionally mentions the term, so this is here as a reference you can return to for when he does. . Information Geometry by John Baez [notes] These notes are packed with insights about geometry, entropy, dissipative forces, and more! Most importantly, they feature a neat derivation of the Fischer Information Metric, which is a big part of the field. I really enjoy the way that John C. Baez explains maths - he manages to make me feel like I really could have done that when he derives something. A bonus of these notes is Baez riffing on how this information geometry applies to evolutionary systems, and the relative entropy (aka the KL-divergence!), so you can see a lot of the bread and butter of the FEP infused into this field! | . | . Computer science and machine learning . The FEP will remain an intriguing bit of mathematical theory if good programmers don’t start to find ways to apply the ideas to problems in artificial intelligence and machine learning. On the other side, ideas from AI/ML are key to understanding where the FEP and Active Inference can fit in and what the current state-of-the-art is. . Deep Learning . Deep learning has been so damn successful that it’s worth knowing about just for that. Neural networks are great function-approximators, which can be useful in the FEP Kaui article. Also, the standard deep learning libraries (PyTorch/Tensorflow etc.) are worth learning because they make it really easy to build flexible models using current best-practices, and they make things like autodifferentiation and optimisation easy! . fast.ai by Jeremy Howard and Rachel Thomas [course] An excellent, practical introduction to state of the art techniques in modern deep learning. Emphasis on deploying models. Worth it just for the Jeremy’s wisdom. | . | Advanced Deep Learning and Reinforcement Learning by DeepMind A more detailed course which picks up a lot of the detail that Fast.ai leaves out. It’s by Deepmind so the content is good quality! | . | Deep Learning Book by Ian Goodfellow, Yoshua Bengio, and Aaron Courville Not so relevant to the FEP, but so so good and freely available that you might as well browse it! If you ever want to know more about deep learning, it also has a great set of introductory chapters on calculus, linear algebra, and probability theory, which just give enough to get started in the general area, rather than doing entire university courses! | . | . Reinforcement Learning . RL is the current established field for creating autonomous, intelligent agents that can interact with their environments. Knowing the basics of how RL has approached intelligence, what kinds of techniques are available, and their limitations, helps us put the FEP in context. RL also deals heavily with Markov chains, the Markov property, and has established techniques for programming these kinds of agents, all of which can be transferred into the design of FEP-style agents. . A nice side-effect is that RL has a bunch of established benchmarks and environments for testing how intelligent an agent is, and I think it’s key to the future of the FEP/Active Inference that their techniques can be shown to compete with and eventually outperform the pure-RL models. . Introduction to Reinforcement Learning by David Silver [lecture videos] The classic intro course! | . | CS285: Deep Reinforcement Learning by Sergey Levine [lecture videos] Where the DeepMind course with David Silver introduces the ideas of traditional RL, this course goes into the details of modern deep RL | . | OpenAI Spinning Up in Deep RL | . Variational inference . At the start of your journey into the FEP, you’ll keep hearing about ‘surprisal’, ‘the ELBO’ (evidence lower bound), ‘variational Bayes’, and ‘model evidence’. For whatever reason, I took too long to just go and find out that all of these ideas are well established and well explained in the field of variational inference . Variational Inference and Deep Learning: An Intuitive Introduction by Alex Lamb [video] | Variational Inference: Foundations and Innovations by David Blei [video] | Machine Learning: Variational Inference by John Boyd-Graeber [video] | Variational Algorithms for Approximate Bayesian Inference by Matthew Beal [Thesis] The PhD thesis Friston cites frequently - the source of many of the key equations used in the FEP | . | Derivation of the Variational Bayes Equations by Alianna Maren [paper] A friendlier explanation of Beal’s thesis, specifically for the FEP! | . | . Generative models . Close your eyes and imagine a red bus! If you can do it, maybe that counts as evidence to you that your brain has some sort of generative model (i.e. can imagine/synthesise data points). More generally, generative modelling tries to explain the data we’re observing as being generated by some smaller set of variables. The FEP deals heavily with the language and ideas of generative models, so reading up on directy is helpful! . Modern Latent Variable Models by DeepMind &amp; UCL [video] | Probabilistic Graphical Models by Eric Xing (also see course website here [video lectures] I enjoy this course for taking a different perspective on ML/DL. There’s a lot of variety, but the course has videos on variational inference and generative models. There are also slides and course notes here | . | . The Free Energy Principle and Active Inference . The main event! . General introductions . God Help Us, Let’s Try To Understand Friston on Free Energy by Scott Alexander [blog] | Karl Friston on Brains, Predictions, and Free Energy by Sean Carroll on The Mindscape Podcast [podcast] Sean’s interview with Karl Friston is my favourite of his ‘popular’ appearances. Sean Carroll really got some great detail and explanations from Friston | . | Karl Friston: Neuroscience and the Free Energy Principle by Lex Fridman [podcast] | . Technical introductions . Active Inference Podcast by @InferenceActive This is a weekly podcast/journal club on the FEP/Active Inference. They’re detailed and the participants are active researchers in the field, so it’s a great way to hear their thoughts on some of the field’s key papers | . | Tutorial on Active Inference by Oleg Solopchuk [blog] | How To Read Karl Friston in The Original Greek by Alianna Maren [blog] | The Free Energy Principle and Active Inference by Kai Ueltzhöffer [blog] This post and the two below it are my favourite blog posts on the FEP. They come with enough math to understand it on a deep level, the explanations are intuitively satisfying, and I really enjoy the | . | Introducing The Deep Active Inference Agent by Kai Ueltzhöffer [blog] A great technical discussion of using deep learning to improve active inference! Notably, there is working code you can play around with and a paper on arXiv going into more detail | . | Life and The Second Law by Kai Ueltzhöffer [blog] | Active Inference and Artificial Curiosity by Karl Friston [video] | Predictive Coding Workshop by Karl Friston [video] | A Tutorial on Active Inference by Maxwell Ramstead [video] This is a really well explained intro to both the FEP and active inference. Big bonus is that it includes a great explanation of Markov Blankets, which you’ll definitely want to know about! | . | International Workshop on Active Inference [videos] ECML-PKDD 2020 hosted the first ever International Workshop on Active Inference! This a big deal for the field as a whole, both because active inference got an entire workshop devoted to it at a mainstream machine learning conference, and because created a great space to find more people working in the field! The video tutorials are all available to watch, and come paired with the slideshows. There were too many good talks to list them all, so go check the programme page above! Some talks I particularly enjoyed were: Active Learning and Active Inference in Exploration by Philipp Schwartenbeck | Putting An End to End-to-End: Gradient-Isolated Learning of Representations by Sindy Löwe | On the relationship between active inference and control as inference by Beren Millidge, Alexander Tschantz, Anil Seth and Christopher L. Buckley, and the closely related Active Inference or Control as Inference? A Unifying View by Abraham Imohiosen, Joe Watson and Jan Peters | A Worked Example of Fokker-Planck based Active Inference by Magnus T. Koudahl and Bert de Vries | . | . | . Key papers . This list is as much a list of some of the most fascinating directions of research in the field as it is a general overview. The hope is that the ideas in some of these papers sound so cool that you can’t help but want to take the ideas further (that was my experience, and that’s why I’m still here!). Rereading this list, I can see it’s skewed by my own research interests, so let me know what other sections/papers should be added! . General The Free Energy Principle for Action and Perception: A Mathematical Review by Christopher L. Buckley, Chang Sub Kim, Simon McGregor, Anil K. Seth (2017) If you’re already mathematically trained and just want a good, deep, technical intro to the FEP this is a great paper to start with. It lays almost all of the terminology and main constructs out in one place (notably, it doesn’t introduce Markov Blankets or information geometry) and you’ll be able to read almost every other paper in the FEP literature after reading this! | . | Deep Active Inference by Kai Ueltzhöffer (2017) | A Free Energy Principle for a Particular Physics by Karl Friston (2019) This monograph lays out a sort of grand-unified vision of the FEP as seen from Karl Friston’s point of view. It’s one of the most encompassing of all the FEP papers and I implicitly designed this syllabus so that, if you knew most of the stuff in the prerequisites list, you’d be able to read and understand this | . | . | Reinforcement Learning and Active Inference Reinforcement Learning or Active Inference? by Karl J. Friston, Jean Daunizeau, Stefan J. Kiebel (2009) | Active Inference: Demystified and Compared by Noor Sajid, Philip Ball, Karl J. Friston (2019) | Reinforcement Learning Through Active Inference by Alexander Tschantz, Beren Millidge, Anil K. Seth, Christopher L. Buckley (2020) | Action and Perception as Divergence Minimisation by Danijar Hafner, Pedro A. Ortega, Jimmy Ba, Thomas Parr, Karl Friston, Nicolas Heess (2020) | Active Inference on Discrete State Spaces: A Synthesis by Lancelot Da Costa, Thomas Parr, Noor Sajid, Sebastijan Veselic, Victorita Neacsu, Karl Friston (2020) | . | Physics/Theory The Thermodynamics of Prediction by Susanne Still, David A. Sivak, Anthony J. Bell, Gavin E. Crooks (2012) | Towards A Neuronal Gauge Theory by Biswa Sengupta, Arturo Tozzi, Gerald K. Cooray, Pamela K. Douglas, Karl J. Friston (2016) | Approximate Bayesian inference as a gauge theory by Biswa Sengupta, Karl Friston (2017) | Markov Blankets, Information Geometry, and Stochastic Thermodynamics by Thomas Parr, Lancelot Da Costa, and Karl Friston (2019) | On the statistical mechanics of life: Schrödinger revisited by Kate Jeffery, Robert Pollack, Carlo Rovelli (2019) | Conservation Laws by Virtue of Scale Symmetries in Neural Systems by Erik D. Fagerholm, W. M. C. Foulkes, Yasir Gallero-Salas, Fritjof Helmchen, Karl J. Friston, Rosalyn J. Moran, Robert Leech (2020) | . | Computational Psychiatry What Is Mood: A Computational Perspective by James Clark, Stuart Watson, and Karl Friston (2018) | Deeply Felt Affect by Casper Hesp, Ryan Smith, Thomas Parr, Micah Allen, Karl Friston, Maxwell Ramstead (2019) | . | Ecological Psychology/Enactivism hold | . | Origins of Life/Self-Organisation Answering Schrodinger’s question: a free-energy formuation by Maxwell Ramstead, Paul Badcock, Karl Friston (2018) | The Markov Blankets of Life: Autonomy, Active Inference, and the Free Energy Principle by Michael Kirchhoff, Thomas Parr, Ensor Palacios, Karl Friston and Julian Kiverstein (2018) | On Markov Blankets and hierarchical self-organisation by Ensor Palacios, Adeel Razi, Thomas Parr, Michael Kirchhoff, Karl Friston (2020) | . | . Open Problems . What are the current open problems in the FEP/Active Inference framework? What research directions are there? Suggestions encouraged! . Conclusion . I hope this encourages more people to get stuck-in to the FEP/Active Inference research-space. It’s so interdisciplinary that it welcomes people from all kinds of backgrounds, and there’s important work that needs doing in math, neurobiology, philosophy, ecology, physics, software engineering, machine learning, and more! There are so many friendly people who are willing to think out loud, explain, answer questions, and offer support -seriously, just try tweet some of the people mentioned in this post! . Good luck with your studies! .",
            "url": "https://jaredtumiel.github.io/blog/2020/10/14/spinning-up-in-ai.html",
            "relUrl": "/2020/10/14/spinning-up-in-ai.html",
            "date": " • Oct 14, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Friston's Free Energy Principle Explained (part 1)",
            "content": "The goal of this series of posts is to provide a friendly but rigorous guide to some of the key ideas underlying Karl Friston’s Free Energy Principle (henceforth: FEP). I will provide as much background as possible, and sprinkle in the intuition-pumps I find most helpful. I want this to be a technical guide, so we won’t shy away from any math1. Your reward for making it to the end will be a deep understanding of the core pieces of the Free Energy principle, the ability to explain it to an interested friend in plain english, and the ability to implement a simulation of Active Inference under the Free Energy Principle in Python! But before we get to the Python, we need to lay the groundwork… . By the end of this post you will understand: . Bayesian inference | ‘Phenotype’ as a set of viable states | Entropy and expected surprise | Kullback-Liebler Divergence | Recognition- and Generative-densities | The derivation of the ‘free energy’ term | . Introduction . Karl Friston’s Free Energy Principle has fascinated and baffled me since I first heard about it in a SlateStarCodex blog post2. Ever since, I’ve spent a good chunk of my spare time trying to understand the ideas and context that underpin the theory. Friston’s work is notoriously difficult to understand, something which Friston himself (and definitely the people who read his work) acknowledge with a wry shrug3. This comes down to a few things: . the maths itself is fairly daunting and Friston’s notation can be opaque until you get used to it. But, I’ll show you in this article that it’s not impenetrable and is well worth understanding! | the fields that Friston draws on to derive the FEP are diverse and any given person is unlikely to have studied them all4. I happen to think this is what’s most exciting about the FEP, because it provides an excuse to learn more about: Statistical Mechanics, especially non-equilibrium stat-mech | Reinforcement Learning | Neuroscience and Predictive Coding | Dynamic systems and (stochastic) differential equations | Information theory | Variational inference methods | Path-integral formulations and the Principle of Least Action | Embodied cognition | Bayesian inference, action under uncertainty | Clinical psychiatry and computational corelates of pyschopathology | . | . For this post, don’t worry about that list, as I’ll introduce concepts as we need them! . To begin, let’s look at some motivating ideas, which we’ll keep coming back to, with more and more formalism to back them up. . You: a thing in the world . You are a thing (fully enlightened Buddhists with no sense-of-self don’t @me yet please, it’s just a starting point) and you live in a world which you do not fully understand (or at-least, it should feel that way, if you’re paying any attention to how crazy things are right now). . You get a constant stream of new information through your senses, and your brain somehow needs to use this information-deluge to do things like make exceptional scrambled eggs, renew your driver’s licence, floss your teeth, and other crucial survival-skills. . Eye on the (causal) prize . Our first big insight into the FEP is that if you want to keep doing the survival thing, you should care not about the sense data itself, but about the stuff out there that causes it - you need to keep your eye on the causal prize! The sense data is just receptors firing more or less often. What matters is that you have receptors that reliably fire in a pattern that tells you useful things like: . there’s a tiger there and she looks pissed | it smells like chocolate cookies have just come out the oven, so you might get fed soon | the molten chocolate cookie you just inhaled is scalding your oesophagus and causing long-term scarring | . So your sense-data isn’t random - it has external causes - but it’s not perfectly reliable either. It’s a noisy connection, and ambiguity abounds: . is that a burglar standing in the corner of your dark room, or did someone leave a coat hanging on your hatstand? | is that the rustling of the wind in the leaves, or another, even scarier tiger stalking you? | is the pressure of your ‘deep-tissue sports-massage’ a welcome relief from stiffness, or categorical proof that your masseuse is a sadist? | . Macro-stable, micro-random . In the time you read all of the above, you breathed several times, each of your cells used some ATP, some cells died or were phagocytosed, the state of your brain changed and a bunch of different neurons fired, and yet You are still a thing in the world. From this I infer that you did not suddenly dissolve into an unremarkable puddle of goo in the preceding 30 seconds. This is our second big insight into the FEP: as a system, many little things can change (you are dynamic), but you must keep yourself tightly bound into a larger pattern - you can be micro-random but must be macro-stable!. Friston often refers to this as possessing an ‘attracting set’ - a set of states that all of your bizarre chemical processes can wiggle around in and between, but not out of. . There are lots of ways you could configure all of the atoms that currently constitute ‘you’. Unfortunately, the vast majority are unworkable, probably because the most likely arrangement of those atoms is spread in a thin mist somewhere between here and Neptune. The small subset of all possible ways to configure yourself that keeps you ‘you’ is your phenotype, and homeostasis is basically the process of keeping yourself in those states through feedback and self-regulation. To survive long-term, you need to have a high probability of occupying those states that are compatible with life (and a low probability of becoming a thin mist somewhere between here and Neptune) . Let’s make a concrete example out of temperature… . It’s getting hot in here (and that’s surprising) . Your body keeps itself near 37 degrees (Celsius), all the time5 . If you were suddenly to sense a temperature of 800 degrees, that would be surprising. And bad. As an organism, 800 degrees is not compatible with your continued existence, and is not something your phenotype is equipped to deal with. In this sense, your body is implicitly making a claim that there is a low probability of you experiencing 800 degree heat, because if that were not the case, you would have a different body. Since 37 degrees seems cosy enough, your body itself is an implicit expectation of a high probability of sensing that temperature6. . So your evolved biology ‘expects’ 37 degrees , and when it doesn’t get it it’s surprised. This ‘surprisal’ is actually a formal term from information theory, where we quantify the amount of surprise as the negative natural logarithm of the probability of the observed outcome: . −ln⁡P(X=x)- ln P(X = x)−lnP(X=x) . All this is saying is that the lower the probability we expect for an event, the more surprised we should be if we do in-fact observe that event, and conversely, if we think there is a high probability of an event happening, we should not be very surprised to see it occur. If you enter the lottery, and I tell you you’ve won, you’d be really really surprised, because you know the probability of that is small. If I tell you you’ve lost, you’re not really surprised at all, as that was always the likely outcome. . . Let’s drill a little deeper into this business of sensing something and - on the basis of that sensation - forming accurate beliefs about the temperature of the environment and your body. It’s worth saying: you don’t have a nice digital-thermometer organ attached somewhere to your body which your brain can just look at. You have millions of tiny sensory receptors, which fire because of the energetic bumping and jostling of atoms hitting the receptor. For a temperature receptor, when it’s hotter, the atoms hitting it have a higher average energy, which makes it more likely that the neuron the receptor is attached to is depolarised and fires an action potential (“spikes”). We can roughly reason that in hotter environments, our temperature receptors are firing more often (but only on average - it’s still a “noisy” signal), and so maybe if our brain counted the number of spikes in a certain time, it could learn a mapping from the state of the sensory data it receives to the probable temperature of the environment. . All Reality is Virtual Reality . This gives us our third big clue about the FEP: we don’t directly experience the environment, only the noisy sensations that correlate with it - we’re one layer removed from the world, exploring the virtual reality of our sense data and inferring things about the reality behind it. This is really the jumping off point for the FEP: as an organism, we need to minimise our surprisal (we don’t want to find ourselves in 800 degree heat, and do want to find ourselves at 37 degrees, with high probability), but we only have access to our noisy sense data, and we don’t know what causally determines our temperature in the environment. . Getting Bayesian . As organisms, we want to update our beliefs about the true state of the environment, given some sense data as evidence. That’s right, it’s time for7 . . (obligatory link to Yudkowsky on Bayes Theorem. If this is new, read this now) . Bayes theorem tells us the optimal way to update our beliefs given some new evidence. Doing this is sometimes called Bayesian inference, or Bayesian updating, or - controversially - as “not making up your beliefs”. . . . A brief note on integral notation: I will often write integrals like this: $ int_{}^{}{dx f(x)}$ with the $dx$ at the front of the integral. If you&#39;re used to seeing it at the back, like this: $ int_{}^{} f(x) dx$ don&#39;t freak out, they&#39;re exactly the same. Also, I&#39;m going to leave the bounds of integration out for now. We can add them in if we need them later What we want is to update our belief about the state of the environmental temperature, given our current sensory data. Let’s write the prior probability that our temperature is 37º as $P(T)$, and the probability that we receive 40 incoming neural impulses in a given time as $P(S)$. We want to know the updated probability that our temperature is 37º, given that we sense 40 neural spikes: . P(T∣S)P(T|S)P(T∣S) . So our hypothesis is that the temperature is 37 degrees, and the evidence we’re using to evaluate it is the 40 spikes we received in the last few seconds. . P(T|S)=P(S|T)P(T)P(S)P left( T middle| S right) = frac{P left( S middle| T right)P left( T right)}{ blue{P(S)}}P(T∣S)=P(S)P(S∣T)P(T)​ . . The $ blue{P(S)}$ term seems to cause trouble, so I&#39;m going to spend a little extra time explaining it here, using the example of modelling the weather today based on yesterday&#39;s weather: The probability of it being sunny today, $P( text{Sunny})$ can be thought of as the sum of the two possibilities - it could be sunny today, given that yesterday was sunny, or it could be sunny, given that yesterday was **not** sunny: $$P( text{Sunny}) = P( text{Sunny}| text{sun yesterday})P( text{sun yesterday}) + P( text{Sunny}| text{no sun yesterday})P( text{no sun yesterday})$$ Instead of the sum of these two complementary outcomes, we could sum over each different possibility: $$P( text{Sunny}) = P( text{Sunny}| text{sun})P( text{sun}) + P( text{Sunny}| text{rain})P( text{rain}) + P( text{Sunny|snow})P( text{snow}) + P( text{Sunny|tornado})P( text{tornado}) + ...$$ Which we can compress as a sum over each possible weather state: $$P( text{Sunny}) = sum_{weather}{P( text{Sunny|weather})P( text{weather})}$$ Based on the box above, we want to write $P(S)$ like this: . P(S)=∑iP(S∣Ti)P(Ti) blue{P(S) = sum_{i}{P(S|T_i)P(T_i)}}P(S)=i∑​P(S∣Ti​)P(Ti​) . but we must remember that, unlike our discrete weather states above, temperature is a continuous variable (it’s just a real number, which can take any value). Therefore, we replace the sum over states with an integral over all temperature values: . P(T|S)=P(S|T)P(T)∫P(S|T)P(T)dTP left( T middle| S right) = frac{P left( S middle| T right)P left( T right)}{ blue{ int_{}^{}{P left( S middle| T right)P left( T right) text{dT}}}}P(T∣S)=∫​P(S∣T)P(T)dTP(S∣T)P(T)​ . And there you have it. All you need to do to perfectly understand the world is know the probability of experiencing some sensory data given a particular environmental state, and evaluate the probability of experiencing that sensory data under every possible hypothetical temperature. Very simple stuff! . Okay, so that integral is intractable, which is formal mathematical language for ‘Wolfram Alpha can’t compute it’. This is a problem for the FEP, and much of the rest of our effort will go into getting around that integral. When we can’t get an exact result, we turn to approximate methods. We’re going to manipulate our equation above until it’s in a form that allows us to do approximate Bayesian inference. . Approximating your posterior . We want to find the posterior probability (the probability we get after applying a Bayesian update) that: . P(T=37∣S)P(T=37|S)P(T=37∣S) . It would really help us control our body temperature if we understood the causal influences determining it. Intuitively, we want a world-model that predicts that if we move closer to a heat-source, we’ll get sensory data that tells us we’re getting hotter. . The internal model that encodes how we expect our sense data to correlate with our environmental states is called a Generative Model, and is referred to by Friston as the G-density. Our G-density tells us the joint probability of experiencing some sense data and a corresponding environmental state: P(T,S)P(T,S)P(T,S) . You can imagine this as a big table that assigns a probability to each possible pair of values. A good model in this case would assign a high probability to the combination: . P(high temp, lots of spikes)P( text{high temp, lots of spikes})P(high temp, lots of spikes) . and a low probability to things like: . P(high temp, few spikes)P( text{high temp, few spikes})P(high temp, few spikes) . We will also want a function that represents our current ‘best-guess’ as to the causes of our sensory input, which we’ll call the R-density (for Recognition): q(T)q(T)q(T) . This is just a probability distribution over the state of the environment, and we’re using $q$ instead of $p$ to remind us that it’s a distribution we’re guessing at. . We now need another fancy piece of information theory: the Kullback-Liebler (KL) Divergence8 . The KL Divergence just tells us how different two different probability distributions are: . . We want the KL divergence because we want to know how close or far away our best guess is to the true posterior belief if we could compute that ugly integral . We write the KL-divergence between our guess $q(T)$ about the environment and the optimal posterior belief about the environment from Baye’s theorem: . DKL(q(T)∣∣P(T∣S)) = ∫dT q(T)ln⁡q(T)P(T|S)D_{ text{KL}}(q(T)||P(T|S)) = int_{}^{}{ text{dT} q( T ) ln frac{q left( T right)}{P left( T middle| S right)}}DKL​(q(T)∣∣P(T∣S)) = ∫​dT q(T)lnP(T∣S)q(T)​ . which we rearrange using the property of the logarithm to: . = ∫dT q(T)[ln⁡q(T) − ln⁡P(T∣S)]= int_{}^{}{dT q(T) lbrack ln{q(T) - ln P(T|S) rbrack}}= ∫​dT q(T)[lnq(T) − lnP(T∣S)] . Now, any R-density (that is, any $q(T)$) which minimises this KL divergence, must be a good approximation of our true posterior. The only problem is that we don’t know the true posterior (that’s the thing we’re trying to work out in the first place), and so can’t simply guess a $q(T)$ to see if it minimises the KL Divergence, because we don’t know what we’re comparing it to. . To get around this, we’ll rewrite the true posterior . P(T∣S) orange{P(T|S)}P(T∣S) . using some pretty basic probability theory identities: . P(T∣S)=P(S∣T)P(T)P(S) orange{P( T | S )} = frac{ blue{P( S | T )P( T )}}{ purple{P( S )}}P(T∣S)=P(S)P(S∣T)P(T)​ . P(T,S)=P(S∣T)P(T) blue{P( T,S ) = P( S | T )P( T )}P(T,S)=P(S∣T)P(T) . ∴P(T∣S)=P(T,S)P(S) therefore orange{P( T | S )} = frac{ blue{P( T,S )}}{ purple{P( S )}}∴P(T∣S)=P(S)P(T,S)​ . If we take the natural log of both sides: . ln⁡P(T|S)=ln⁡P(T,S)P(S)=ln⁡P(T,S)−ln⁡P(S) ln{ orange{P left( T middle| S right)}} = ln{ frac{ blue{P left( T,S right)}}{ purple{P left( S right)}} = ln{ blue{P left( T,S right)}} - ln{ purple{P left( S right)}}}lnP(T∣S)=lnP(S)P(T,S)​=lnP(T,S)−lnP(S) . Plugging this expression for $P(T | S)$ into our KL Divergence we get: . DKL(q(T)∣∣P(T∣S)) =∫dT q(T)[ ln⁡q(T)−ln⁡P(T,S)+ln⁡P(S)]D_{ text{KL}}(q(T)|| orange{P(T|S)}) = int_{}^{}{dT q(T) lbrack ln{q left( T right) - ln{ blue{P left( T,S right)} + ln{ purple{P left( S right)}}}}} rbrackDKL​(q(T)∣∣P(T∣S)) =∫​dT q(T)[ lnq(T)−lnP(T,S)+lnP(S)] . Combining the first two $ ln$ terms: . DKL(q(T)∣∣P(T∣S)) =∫dT q(T)[ln⁡q(T)P(T,S) + ln⁡P(S) ]D_{ text{KL}}(q(T)|| orange{P(T|S)}) = int_{}^{}{dT q(T) lbrack ln{ frac{q left( T right)}{ blue{P( T,S)}} + ln{ purple{P left( S right)}} }} rbrackDKL​(q(T)∣∣P(T∣S)) =∫​dT q(T)[lnP(T,S)q(T)​ + lnP(S) ] . Something you may notice about this is that we now have our KL divergence in terms of only our R-density, $q(T)$, and our G-density, $P(T,S)$, plus a ‘surprisal’ term $ ln P(S)$. This looks like progress! Remember, our R density is just our current best guess about the true state of the environment, the G-density is our internal model of how sensory data and environmental states correlate, and surprisal tells us how unexpected some data was! . We can pull the $ ln P(S)$ out from under the integral because integration is linear we’re integrating over $dT$ and so $ ln P(S)$ acts like a constant (it’s just a number): . DKL(q(T)∣∣P(T∣S)) =∫dT q(T) ln⁡q(T)P(T,S) +ln⁡P(S)∫dT q(T)D_{ text{KL}}(q(T)||P(T|S)) = int_{}^{}{ text{dT} q(T) ln{ frac{q left( T right)}{ blue{P( T,S )}} }} + ln{ purple{P(S)}} int_{}^{}{dT q(T)}DKL​(q(T)∣∣P(T∣S)) =∫​dT q(T) lnP(T,S)q(T)​ +lnP(S)∫​dT q(T) . Furthermore, we have the requirement that . ∫dT q(T)=1 green{ int_{}^{}{ text{dT} q left( T right) = 1}}∫​dT q(T)=1 . which just says that the total probability must add to 1. Using this, we get: . DKL(q(T)∣∣P(T∣S)) =∫dT[q(T)ln⁡q(T)P(T,S) ]+ln⁡P(S)×1D_{ text{KL}}(q(T)||P(T|S)) = pink{ int_{}^{} text{dT} left lbrack q left( T right) ln{ frac{q left( T right)}{ blue{P left( T,S right)}} } right rbrack} + ln{ purple{P left( S right)} times green{1}}DKL​(q(T)∣∣P(T∣S)) =∫​dT[q(T)lnP(T,S)q(T)​ ]+lnP(S)×1 . Now, we define: . F ≡∫dT[q(T)ln⁡q(T)P(T,S) ]F equiv pink{ int_{}^{} text{dT} left lbrack q left( T right) ln{ frac{q left( T right)}{ blue{P left( T,S right)}} } right rbrack}F ≡∫​dT[q(T)lnP(T,S)q(T)​ ] . Giving us: . DKL(q(T)∣∣P(T|S))=F+ln⁡P(S)D_{ text{KL}}(q(T)||P left( T middle| S right)) = F + ln{P(S})DKL​(q(T)∣∣P(T∣S))=F+lnP(S) . If you haven’t guessed already, the F we defined above is ‘free energy’!!. Now we have a key result in the Free Energy literature, one which Friston refers to all the time: . Free energy is an upper bound on surprisal! . You can see this if I tell you that the KL divergence has the property that it is always greater than or equal to zero: . DKL(q(T)∣∣P(T|S))≥0D_{ text{KL}}(q(T)||P left( T middle| S right)) geq 0DKL​(q(T)∣∣P(T∣S))≥0 . ⇒F + ln⁡P(S)≥ 0 Rightarrow F + ln{P left( S right)} geq 0⇒F + lnP(S)≥ 0 . F ≥ −ln⁡P(S)F geq - ln{P(S)}F ≥ −lnP(S) . Free energy is the surprisal an organism experiences upon sampling some data, given a generative model. . More specifically, free energy is the surprisal an organism experiences upon sampling some data, given a generative model. If you’re up for it, you should try matching those words to the parts of the equations that encode them! I’ll even put the full equation right here in-front of you, with no distracting colours: . F ≥ −ln⁡P(S)F geq - ln{P(S)}F ≥ −lnP(S) . ∫dT[q(T)ln⁡q(T)P(T,S) ]≥−ln⁡P(S) int_{}^{} text{dT} left lbrack q left( T right) ln{ frac{q left( T right)}{P left( T,S right)} } right rbrack geq - ln P(S)∫​dT[q(T)lnP(T,S)q(T)​ ]≥−lnP(S) . So far, we have found that this quantity ‘free energy’ is an upper bound on surprisal, and we notice that minimising it means we are approximating the true posterior . P(T∣S)P(T|S)P(T∣S) . Another form of the free energy: . We’re going to need to massage this equation for F a bit more to see if something useful pops out. . Again, using the linearity of integration and the properties of the logarithm, we have: . F ≡∫dT[q(T)ln⁡q(T)P(T,S) ]F equiv int_{}^{} text{dT} left lbrack q left( T right) ln{ frac{q left( T right)}{P left( T,S right)} } right rbrackF ≡∫​dT[q(T)lnP(T,S)q(T)​ ] . F = ∫dT q(T) ln⁡q(T)  −∫dT q(T)ln⁡P(T,S)F = int_{}^{} text{dT}{ q(T) ln{q(T) } -} int_{}^{}{ text{dT} q(T) ln{P(T,S)}}F = ∫​dT q(T) lnq(T)  −∫​dT q(T)lnP(T,S) . From statistics, we say that the expected value (or average) of a Random Variable $X$ is the sum over all values that variable can take, times the probability it takes that value: . E[X] = ∑ixiP(X=xi)E lbrack X rbrack = sum_{i}^{}{x_{i}P(X=x_{i})}E[X] = i∑​xi​P(X=xi​) . . If you need a sanity check, let&#39;s compute this for a fair 6-sided die. The probability for each face landing up is $1/6$ The values our random variable $X$ can take are $X = {1,2,3,4,5,6 }$ $$E[X] = sum_{x=1}^{6} frac{1}{6}x = 3.5$$ which is indeed the correct average value for our die 🎲 Replacing the sum with an integral in the continuous case: . E⁡[X]=∫RxP(x) dx displaystyle operatorname {E} [X]= int _{ mathbb {R} }xP(x) ,dxE[X]=∫R​xP(x)dx . We also have the entropy of a system (you should convince yourself that this is the “expected value” of the surprise $- ln P(x)$): . H(X)=−∑i=1nP(xi)log⁡P(xi) mathrm {H} (X)=- sum _{i=1}^{n}{ mathrm {P} (x_{i}) log mathrm {P} (x_{i}})H(X)=−i=1∑n​P(xi​)logP(xi​) . . Entropy can be a somewhat tricky term, but I think this way of thinking about it is fairly intuitive: it’s just the amount you expect to be surprised by a given probability distribution. Some distributions are very tightly clustered around their average values, and so they are very unsurprising, hence low entropy. The opposite of this are the so-called maximum-entropy distributions, which means every sample is maximally surprising. . . An example entropy calculation: A coin is a maximum entropy system, because it&#39;s maximally unpredictable, you don&#39;t know if it&#39;s going to come up heads $h$ or tails $t$ $$H(coin) = -P(h) log P(h) - P(t) log P(t)$$ $$H(coin) = -0.5 * log(0.5) - 0.5 log(0.5)$$ $$H(coin) approx 0.3$$ Now imagine if we had an unfair coin that came up heads with a probability of 90%: $$H(coin) = -P(h) log P(h) - P(t) log P(t)$$ $$H(coin) = -0.9 log (0.9) - 0.1 log (0.1)$$ $$H(coin) approx 0.14$$ So the more certain we are about an outcome, the lower the entropy! Equipped with these ideas, we define an energy-like function $ mathbf{E}(T,S)$: . E(T,S) ≡−ln⁡P(T,S) red{ mathbf{Ε}(T,S)} equiv red{- ln{P(T,S)}}E(T,S) ≡−lnP(T,S) . And this allows us to rewrite our free energy term F as (remember the $ mathbf{E}(T,S)$ is defined as the negative of the log above, so we get a positive in the end): . F =∫dT q(T) ln⁡q(T)  −∫dT q(T)ln⁡P(T,S)F = purple{ int_{}^{}{ text{dT} q(T) ln{q(T) }}} - int_{}^{}{ text{dT} q(T) red{ ln{P(T,S)}}}F =∫​dT q(T) lnq(T)  −∫​dT q(T)lnP(T,S) . F=∫dT q(T)E(T,S)+∫dT q(T)ln⁡q(T)F = int_{}^{}{ text{dT} q left( T right) red{ mathbf{E} left( T,S right)}} + purple{ int_{}^{}{ text{dT} q left( T right) ln{q left( T right)}}}F=∫​dT q(T)E(T,S)+∫​dT q(T)lnq(T) . Now, if we look at this formula (check that you see this from above) it looks like it’s saying that ‘free energy’ is equal to an average (expected value) of the energy-like function, minus something that looks a little like a continuous version of the entropy9. This version of the formula is something you’ll hear Friston refer to often, because it’s analagous to the Helmholtz free energy from thermodynamics/statistical mechanics: $F = U-TS$. The Helmholtz free energy is defined as the difference between the internal energy $U$ and the entropy $S$ of the system, multiplied by the temperature $T$. Here the term ‘free energy’ acquires some physical sense, being the quantity of energy in our system that is available to do useful work. Here I’ve split the $+$ into two negatives to emphasise we have a potential energy minus the entropy. . F=∫dT q(T)E(T,S)−(−∫dT q(T)ln⁡q(T))F = int_{}^{}{ text{dT} q left( T right) mathbf{E} left( T,S right) } - left( - int_{}^{}{ text{dT} q left( T right) ln{q left( T right)} } right)F=∫​dT q(T)E(T,S)−(−∫​dT q(T)lnq(T)) . Having gone through all of the above, we can now state the FEP explicitly: . The Free Energy Principle states that a system in nonequilibrium steady state with its environment must minimise its free energy . We’ll need another few posts to unpack everything there, but at minimum we now know what the ‘free energy’ term is and why minimising it might be useful! . Conclusion, Summary, and Anki Cards . We motivated the Free Energy Principle with three big ideas about living organisms: . Eye on the (causal) prize Survival depends on you figuring out what causes your sense data, because that allows you to model your environment | . | All Reality is Virtual Reality Survival depends on interpreting noisy correlates of the causes you care about. You can’t see the causes directly | . | Macro-pattern, micro-random You are made of atoms doing lots of small, random things, which you must self-regulate to keep within a broader set of viable patterns | . | . Additionally, we learned: . We want to calculate the probability of our environment, given our sense data, but the integral is intractable | We use approximate Bayesian inference to get around this | The G-density is a probability density function that tells us how environmental states correlate with sensations: $P(T,S)$ | The R-density is an internal best guess by the organism about the state of the environment: $q(T)$ | Minimising the KL-Divergence lets us approximate the posterior | Free energy is an upper bound on surprisal | We can rewrite our free energy as an average energy minus an entropy term, which makes it look like the Helmholtz free energy | . As an experiment in what Michael Nielsen and Andy Matuschak dub the Mnemonic Medium, I’ve made a small deck of Anki cards that complement this post. If you use them, they’ll make the tricky vocabulary we’ve developed here into something you have stored in your long-term memory for easy use. You can download them here . In the next post, we’ll take the background we developed here and build on it. We’ll take a deeper look at the R and G densities and some simplifying assumptions that allow us to write neat versions of them. The result will show the deep connection between the Free Energy Principle and Predictive Coding in the brain. . If something here doesn’t make sense, is clearly wrong, or got you interested, let me know here or on twitter @jnearestn If you don’t want to wait for the next post, The Free Energy Principle for Action and Perception: A Mathematical Review is the best place to start out on your own, and I owe it a great deal in helping write this post! . . Special thanks to Gianluca for his detailed comments on drafts of this post . The good news is that the Jeremy Howard rule is holds: even if all of the math seems difficult, it will look much simpler in code &#8617; . | shoutout to the New York Times for going full 2020 and trying to ruin that too &#8617; . | See for example Friston’s reaction to a bunch of quants in this article &#8617; . | in fact, this multiplicity of disciplines seems to set off a percentage of people’s BS-detectors, sort of like when Deepak Chopra starts invoking Quantum Mechanics as an explanation for everything &#8617; . | if you don’t like 37, just use whatever number you were told by the last person who pointed one of those COVID-screening-thermometer-guns at your head &#8617; . | there is of course the question of ‘why expect 37 degrees in the first place, why not 800 and then you can survive through more possible states’, to which the quick answer is “evolution” and evolutionary niches” – something like: that temperature is the constraint that you, as a particular organism, are forced to satisfy because of the particular set of biochemical pathways you evolved to best fit into your environmental niche (which seems, at this point, to be Zoom Meetings, for some reason?) &#8617; . | 9 year old Jared knew a killer font when he saw one &#8617; . | watch this video by Aurelien Geron if you want a great intro to the KL-divergence &#8617; . | as I’m writing this, I’m learning that this continuous analogy of the entropy is not actually well-defined. It’s called differential entropy, and Claude Shannon apparently just wrote it down, assuming it was correct (okay, now I feel less bad for making the same assumption). It took E.T Jaynes to write down a better version called the ‘Limiting Density of Discrete Points’, which - at minimum - is a worse name than ‘differential entropy’. I don’t know what effect the ill-definedness of continuous entropy has for the FEP, so that’s something to look into while I write part 2! &#8617; . |",
            "url": "https://jaredtumiel.github.io/blog/2020/08/08/free-energy1.html",
            "relUrl": "/2020/08/08/free-energy1.html",
            "date": " • Aug 8, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "3 Rules For Learning Difficult Things Online",
            "content": "This doesn’t apply to people receiving a set online syllabus from a university or other institution. This is for people who, for whatever reason, didn’t have the chance to take the math/physics/bio/compsi1 courses they wanted to at a university, and are now trying to learn something useful on their own. . 1. Advanced before Introductory . ‘Intro’ courses are everywhere, and they’re largely useless2. They’re fine if you want to keep up with conversation, but they’re too superficial to make your training useful. Coursera and other platforms like it are particularly full of these kinds of courses. . It is an unwritten rule of university professors that every course must begin with an introductory lecture which revises everything you would get from the ‘beginners’ course, so you’ll know if you are missing anything crucial before you begin. Another reason to go for the advanced course is because, bizarrely, introductory courses often end up leaving out exactly the ‘advanced’ arguments that make complex ideas make sense. Advanced courses will keep you interested for longer, because you’ll have to really try to understand. If you can tolerate confusion, being forced to work it out will be more beneficial than comfortably following the boring intro course. . How? . If you’re going to use Coursera, look for an advanced course. Even better, avoid Coursera and find the course a department actually uses to teach its students. There’s an art to this, but if you can find the course’s webpage for students (start at the departments’ webpage, go to a lecturer’s bio and see if it lists any courses), there is often a private YouTube playlist lecture recordings, and PDFs of all lecture slides and readings. . Examples: . University of Toronto Machine Learning Courses Economics and Computing courses by Matt Weinberg . 2. Applications before Abstractions . If you want to learn something interesting, and difficult, it probably comes with a substantial list of prerequisites. Or, you have an intuition that learning [advanced concept X] might be useful in your work/research/Twitter-flame-wars. . This is probably Math. For several reasons, math3 is usually the bottleneck to learning the cool new thing you want to try. Your list of prerequisites might be something like: linear algebra, vector calculus, differential equations, abstract algebra, probability theory, differential geometry etc. . And you, being the kind of person who learns things online for fun, will go and track down all of the best complex analysis courses, and they’ll all be intended for math majors and you’ll be perfectly miserable as the Prof writes down another list of assumptions about the function being holomorphic around p. If you love that kind of rigour, stick with it, but I suspect many people are put off because they just need the tools, for now. . How? . Go find courses which explicitly try to teach the ideas of that abstract discipline to non-experts. The benefit is that the Prof now can’t assume she’s talking only to math majors, which may improve your experience. Bonus points if you learn something about the applied discipline too! . Examples: . Abstract Algebra for Theoretical Computer Scientists Applied Topology for Neuroscience Applied Category Theory . 3. Top-Down before Bottom-Up . There are two ways you can go about learning something difficult – you can start at the bottom and build up: learning the prerequisites and the background details, slowly building up towards the big, useful, important, interesting ideas at the cutting edge of the field – or you can start from the top and dig down: immersing yourself immediately in something big and exciting, which you don’t fully understand yet, but which you’re motivated to keep doing because you’ve seen tangible results. Top-down also keeps you focused on essentials, because you only add detail as is necessary for your understanding. Already know how to multiply matrices, but don’t remember how to find their eigenvalues? Then why sit through an entire linear algebra course? You’ll suddenly find yourself needing to learn about eigenvalues and you can spend an hour on YouTube getting up to speed (Tim Ferriss calls this “just in time, not just in case”). . The fast.ai Deep Learning course is the canonical example here. In the first lesson, you train a deep neural net to recognise several breeds of dogs and cats, at near-cutting-edge level. Over the course, you learn by tinkering with advanced models and learning to play around with the code. It’s probably the closest thing to Legitimate Peripheral Participation I’ve seen in an online course so far. . How? . Following rule 1 and 2 should have already got you a lot of the way here. Look for project-based courses, or see if you can just start with the coolest part of a discipline and pick up the prerequisites as you go. Don’t fall into the trap of spending years “in preparation”, this is probably as bad as only ever doing “introductory” courses. . Examples: . Fast.ai . I don’t have any other good examples to hand, suggestions would be appreciated, and I’ll add them here! . I mostly have experience doing this for STEM domains. These might work for courses in the arts/humanities and so on, but there’s probably something important I’m missing &#8617; . | I think that some introductory programming courses might be exceptions here – or maybe languages generally? &#8617; . | I dream of a world where everyone has a browser plugin which just changes words to their favourite version. All the maths vs mathematics vs math people, all the American ‘-ize’ vs sensible ‘-ise’ people could just get on with it. &#8617; . |",
            "url": "https://jaredtumiel.github.io/blog/2020/05/12/three-rules.html",
            "relUrl": "/2020/05/12/three-rules.html",
            "date": " • May 12, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "Your Algorithmic Reflection",
            "content": "Most people are aware that algorithms shape their online experience. Some people understand that the algorithms’ underlying incentive is to maximise time spent on-site and number of ad-clicks. Few people know how to use this to their benefit. . The 2016 US election saw the popularisation of the terms “filter bubble” and “fake news”. The first refers to algorithms selectively showing social media content that confirms your existing worldview and systematically excluding all but strawman versions of opposing viewpoints from your feed. The second is a consequence of this: the algorithms will propagate the most polarising, least-nuanced views because these naturally stir reaction and attract clicks. At some point, the view becomes so distorted it’s patently false and yet wildly popular within a filter bubble. I’d flesh this out more, but CGP Grey has a wonderful short video explaining just this, so you should go watch that instead. . The Good, the Bad, and the Ugly of your Algorithmic Reflection . Combatting fake news and filter bubbles is vital, but here I want to ask what these algorithms teach us about ourselves and how we can use this knowledge to our advantage. . YouTube, Facebook, and the rest have spent a lot of money developing machine learning systems that will keep you hooked on their platform. They do this by accumulating information about what you seem to like, showing you some suggestions, learning from your reaction, and repeating the process 1. What each company is racing to do is build the most accurate model of you they can because an accurate model of you gives them the power to predict what you might like in the future. . This is my key argument: . Algorithmic content suggestion is here to stay | Algorithms try to understand your interests, personality, and identity to better serve you content you will enjoy - thus keeping you on-site longer | The way the algorithms do this is by observing your current browsing habits (what you do and don’t click on, what you watch and for how long etc.) and the browsing habits of people ‘like you’ (people engaging with similar things and what else they seem interested in) and building a model of you based on this data 2 | In this way, our newsfeeds and suggestions become a reflection of us - our algorithmic reflection | Therefore, we should act in a way which puts the algorithms to work for us so that what is reflected back to us becomes both aspirational (because it represents us at our best) and self-fulfilling (in that consuming better content will shape us into better people, who thus desire better content). | Contrast this last point with The Unhappy Death-Spiral of social media that plays out as follows: . Open your platform of choice and scroll. The timeline is infinite, the videos on autoplay | Halt! The thumbnail has a cat and the all-caps caption ending in “🔥🔥🔥😂😂” has alerted you to the presence of something important. 41K heart reactions can’t be wrong | Train the algorithms to predict that you value the mundane, the clickbaitey, the controversial-but-lacking-in-nuance | Receive suggestions which fulfill this prophecy, consume them in turn, reinforce the algorithm’s model of you | Minutes pass and accumulate into hours. Bleary eyed and invariably feeling just a little worse about yourself, return to what you were meant to be doing. Bonus if you lament to a friend that you “just don’t have time for hiking or coffee or painting like you used to” | . This is a pattern I have repeated more times than I’m comfortable admitting. It’s something I see my friends do, and it’s something I’m sure most readers have experienced, especially if you’re young enough not to have known a world without social media. . We’re collectively adrift in an ocean of online content and most of us are caught in the doldrums (the latitudes where sailors would spend months trapped, just waiting for a wind - an apt metaphor for the difficulty of escaping the Unhappy Death Spiral above). We find ourselves in these doldrums, directed there by algorithms tasked only with keeping us in the ocean. It’s here that we see our chance of escape, for the algorithms don’t care where in the ocean you are, just that you remain 3. The doldrums are a popular destination for the algorithms to steer you into because they work on just about anyone. To see this effect in action, just look at the kind of content that YouTube shows a first-time user who’s just signed up:4 . A first look - I think the video game and car suggestions are the algorithms’ best guess for 20-something men? . Notice that just based off of my demographics, YouTube’s algorithm has identified some topics and videos they know from experience are likely to get me to stick around. Scrolling down a bit shows these suggestions. You can see my browsing location has made the algorithm select some local Soap Operas for me: . Not exactly Khan Academy, is it . I think the first thing to notice here is just how terrible most of these videos are. Many are clickbaitey; several fall into that strange category of simple things that humans find oddly satisfying, things which abuse some novelty switch deep inside us, like this video of someone testing to see if sharks can detect blood. . . I haven’t watched it, so I don’t know what happens. But 31 million people in the past week have. That’s more people than live in all of Australia. That’s so many people that you could have everyone in Australia watch it and share it with everyone in Puerto Rico and everyone in Slovenia and there would still be a million views unaccounted for. . My point here is not to denigrate content creators. If making this kind of YouTube video is what you do, then by all means continue. My point here is to say that for many people, this kind of content - and its analogues on Facebook, Instagram, and the like - is pushed by algorithms because it easily captures our attention without really improving anything else about us. And once we’ve revealed a weakness for this kind of content, we’re bound to be shown more like it, binding us to an algorithmic reflection of ourselves we don’t really like. My point here is that we can do better! . There’s an oft-repeated quote that you are the average of the five people you’re closest to. There’s another that says “you are what you eat”. We’re treated by algorithms as the average of the five-million people closest to our demographic group and we are being force fed their media-diet. . Creating a better reflection - the case for algorithms . Consider for a second the power of these algorithms. They trawl the vast landscape of new content generated every day and manage to reliably identify the few pieces worth seeing. Of the 500 hours of YouTube videos uploaded every minute of every day, or the half a billion tweets sent daily, you see the tiny fraction that are worth it 5. At least in theory they’re worth watching - in practice they’re often just the most polarising, overstated, and clickbaitey. . Remember though, all the algorithms care about is that you use the site. If you could teach them that showing you content that makes you a reliably better person - in whatever way you want to define that - also keeps you using the site, you suddenly have the resources and technology of the world’s most powerful companies working to find more content that will do that. And as you do this more, you can refine your standards, so that the quality of content continues to rise, bringing you with it. . Suddenly, instead of a feed brimming with garbage, you have a legion of algorithms working tirelessly to pick the most nuanced, thoughtful, reasonable, and long-term-useful content from the morass and deliver it to you. You’ve gone from being collateral damage in the war on attention to purposefully using technology to improve yourself in lasting ways. . Before I go on and explain how to do this, I want to pause here because this is the deeper message of this essay: as new sources of information increase, we will be faced with the very real problem of sorting and prioritising it. For most of human history, we’ve managed this ourselves, but in some areas we’ve reached the limits of what we can reasonably sort 6. This puts us at a tipping point, where we need to increasingly offload the administrative burden of discovering, prioritising, and (increasingly) acting on 7 content to machine learning systems. If we do this without considering what those algorithms are optimising for, we risk handing a large part of our lives to systems not aligned with our terminal goals. Currently, they optimise for our attention and our ad-clicks, and this has given us fake news, political polarisation, and filter bubbles. Currently, we can still trick-or-teach them to show us content that both keeps our attention and fulfills some higher purpose of our own. This is only because time-on-site and consuming useful content are not mutually exclusive. However, the natural descent into clickbait that arises out of the competition for attention should remind us that optimising without thinking about second-order effects inevitably leads to unforeseen consequences. We want algorithms to decrease the time we spend on mindless admin. We need not be mindless in how we get there. . A guide to changing your algorithmic reflection . If you wanted to combat this, you might try some of the following (this guide mostly focuses on YouTube because it’s particularly well suited to long-form content that could lead to real, lasting improvements, but similar actions on Facebook, Instagram, Twitter etc. will also work): . 1. Decide on a direction . Start by deciding on exactly what aspect of yourself you want to improve. This can be pretty general to start because the algorithms will naturally find and explore relevant material for you. All you have to do is make sure you only engage with content relevant to the part of you that you want to develop. . For me, I wanted to learn much more about machine learning and mathematics. I wanted to teach YouTube to find the most useful content about these topics. To keep this separate from my everyday YouTube, I created a new Google account and vowed to use it only for videos that would help me learn more about what I care about. To take away the hassle of remembering to switch between Google accounts, I set up a FireFox container (for Chrome users, this plug-in appears to do something similar, but I haven’t used it). Firefox containers keep all your log-in information separate for different accounts on the same website, like this: . . Note how each instance of YouTube is giving me different recommendations, with the middle one giving the most relevant ones to machine learning. Now you can keep your different online personas separate! . 2. Reset the algorithms . If you don’t want to create a new account, or you want to keep your current one, you can reset what the algorithms suggest for you by deleting some or all of your search and watch history. Simply head here, select ‘Delete Activity by’ and type in the keywords or time interval you want gone. . 3. Bonus - browser plugins that make the internet far better . DF YouTube (Firefox) optionally blocks sidebars, feeds, comments, suggestions at the end of videos | uBlock Origin (Firefox, Chrome) has long been my ad-blocker of choice. It far exceeds AdBlock | StayFocusd (Chrome) is great at blocking websites when you want to focus | Wikiwand is not well known but deserves to be. If you use Wikipedia as much as I do, you’ll appreciate the look and feel this adds! | . Go Forth . Algorithms discover, surface, and propagate the content we see. This is unavoidable - desirable even. Everything you interact with on social media is teaching some system what you and people like you are interested in and value. The reflection of ourselves we currently see in the algorithms and on our feeds is distorted, muddied by what gets clicks. Remove the silt, let the waters settle, then move forward with purpose and direction! . Cover Photo by Alexandre Debiève on Unsplash . Am I really going to throw in 2 CGP Grey references in such close proximity? Yes. Watch this video for a basic overview of how algorithms and your feed play together &#8617; . | For the Bayesians here: think of the people ‘like me’ (and my age and demographic info) as giving a prior probability for what I’ll like, and each piece of content I engage with as updates that refine the model &#8617; . | I view the process of removing yourself from this ocean as a separate (and also incredibly important) venture. For more, Cal Newport’s new book, Digital Minimalism is a great start &#8617; . | I made a dummy account using my real age and demographic, then logged in to YouTube to see what I’d be shown &#8617; . | Seriously, try having a look at YouTube videos with less than 100 views, they’re generally terrible &#8617; . | Do you know anyone who is happy or even content with the amount of email they’re currently receiving? &#8617; . | Think the automatic replies in Gmail or Google Calendar scheduling in your flights after you get your ticket confirmation email &#8617; . |",
            "url": "https://jaredtumiel.github.io/blog/2019/08/11/use-algorithms.html",
            "relUrl": "/2019/08/11/use-algorithms.html",
            "date": " • Aug 11, 2019"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Hey, I’m Jared! I sometimes read Karl Friston papers am an independent researcher, interested in the Free Energy Principle and Active Inference. I studied medicine in South Africa, and everything was going fine until my very smart brother started university and I heard him talking about all this awesome machine learning stuff. I did what any older sibling would do and tried to compete - teaching myself from his course notes and what I could find online. 4 years later, he’s got an engineering degree, and I’m calling myself an “independent researcher” on the internet. Things are good. . Where else to find me . I have a podcast Apple, Spotify where I speak with my good friend Gianluca about AI, medicine, and neuroscience. . My twitter is @jnearestn .",
          "url": "https://jaredtumiel.github.io/blog/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://jaredtumiel.github.io/blog/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}